# -*- coding: utf-8 -*-
"""day18b_class_attribute_defaults_and_scope.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hN3K8UD9c_2UWePCfGwo9RyXi1hB316N
"""

"""
classes: Trying default values for the attributes
"""
class Cars:
  global_details = ""
  def __init__(self, brand, model, year, color = "Red"):
    self.brand = brand
    self.model = model
    self.year = year
    self.color = color
    #self.color = "Red" #want to see what happens. It will fail
  def print_details(self):
    details = f"The car is from {self.brand}, and the model is {self.model} with {self.color} \n made in {self.year}"
    self.global_details = details
    print (details)
  def print_invoice(self):
    #print (f"The invoice value is 200 USD for this BOM: {details}") #details is function in print_details and will throw a scope error
    print (f"The invoice value is 200 USD for this BOM: {self.global_details}")



#lets instantiate
Zen = Cars("Maruthi", "Zen", 1997)
Zen.print_details()
Zen.print_invoice()

#tried f string assignment to a variable. Previosuly I used only in the print functions

#Time to try some variable scope issues"""

#"details" is defined in the print_details() function, lets see if it is accessible in another member function
#I can define attribute/variables outside of the member functions and they become accessible across all the functions