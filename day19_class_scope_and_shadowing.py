# -*- coding: utf-8 -*-
"""day19_class_scope_and_shadowing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xEosQZZnHV2hzF1O4CTemwPW_VtQ5Y_5
"""

"""More classes"""
# Setting default values on attributes


class Automobiles:
    model = "BMW" #class level attribute
    def __init__(self,vehicle, make, model, year):
       self.vehicle = vehicle
       self.make = make
       self.model = model
       self.year = year
       self.color="red"
    def getdetails(self):
      details= f"The vehicle is a {self.vehicle} of the make {self.make} model {self.model} made in {self.year} and it is {self.color} color"
      #print(f "I am testing the global variable of {model} it doesn't have variable denotation") #this will fail. class level attributes should have "classname.attribute prefix"
      print(f"I am testing global variables of {Automobiles.model}")
      return details
#I will have to test global variables with the same name

car = Automobiles("Car", "Maruthi", "Alto", "2012")
car.color = "Blue"
car.getdetails()

#I will now test class level member functions