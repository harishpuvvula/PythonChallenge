# -*- coding: utf-8 -*-
"""day20_single_inheritance_and_attribute_overriding.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ChKlIzZsRFri_wEFkpIcArbzAEgVQCHP
"""

"""
Today I shall try inheritance in classes. I will focu on single inheritance at the momeent
"""

class Automobile:
  vehicle_count = 0
  def __init__(self, kind, brand, model, price):
    Automobile.vehicle_count = Automobile.vehicle_count + 1
    print(f"I am in the Autombile - Super Class")
    self.kind = kind
    self.brand = brand
    self.model = model
    self.price = price
    self.color = "Red"
    print (f"we have created {Automobile.vehicle_count} autombiles thus far")

class Car (Automobile):
  def __init__(self,brand,model, price, color = "Blue"): #I am introducing a new attribute
    #self.color = "Brown" #I want to have a memeber function local to this class

    super().__init__("Car",brand,model,price)
    print("I am in the Car class")
    self.color = color
     #I am going to override red with brown
    #self.color = "Brown"
    print(f"I am a {self.brand} of the {self.model} and I costed {self.price} and my color is {self.color}")
    #I will now override the values locally
    """Insight there is no local vs global unlike in C++.
    Since the __init__() is run later than the assignment "red" replaces "brown"""

class ElectricFeature(Car): #Multiple iheritance, I will inherit from car which intern inherits from Autombile

    def __init__(self, kind,brand, model, price,horsepower, batterytype):
      super().__init__(brand,model, price)
      self.horsepower = horsepower
      self.batterytype= batterytype
    """Sky is the limit to experiment  """
#Tractor = Automobile("Tractor", "Mahindra", "Agri", 100000 )
#supercar = Car("Maruthi", "Zen", 2000000)
#KiaanCar = Car ("Toyota", "Innova", 1800000)
CleanCar =  ElectricFeature("Car","Tesla", "Model S", 20000, "Silicon", "Magenta")


"""
Check inheritance chain for redundancy.

 Use super() in __init__() to initialize parents.

 Set child attributes after super() if you want to override.

 Keep constructors responsible only for their own arguments.

 Be aware of MRO when using multiple inheritance.

"""