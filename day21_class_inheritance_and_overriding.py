# -*- coding: utf-8 -*-
"""day21_class_inheritance_and_overriding.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M8vckrChZ7vA6oJitku9Lna4bZYYydkt
"""

"""Classes Revisited"""

class Device:
    def __init__(self, brand, power):
      self.brand = brand
      self.power = power
      self.status = "off"
    def toggle_power(self):
      if self.status == "off":
        self.status = "on"
      else:
        self.status = "off"
class Smartphone(Device):
  def __init__(self, brand, power,os, battery = 100 ):
    super().__init__(brand,power)
    self.os = os
    self.battery = battery
  def toggle_power(self):
    super().toggle_power()
    if self.status == 1:
      if self.battery == 0:
        print ("The Battery is empty")
    print (self.status) #I went in circle not knowing accessing status is as good as calling the child's own attrib
  def use_phone(self,hours):
    self.hours = hours
    self.battery = self.battery - hours *10

    if self.battery <=0:
      self.status = "off"
      print ("The phone is off")
    else:
      print (f"The current battery level after {self.hours} of usage is {self.battery}")
  def charge(self,charge):
    self.charge = charge
    print("This method shall charge back you battery")
    if self.battery + charge > 100:
      self.battery = 100
    else:
      self.battery = self.battery + charge
    print (f"The current battery level after charging is {self.battery}")



Lumia = Smartphone("Nokia", 330, "Android", 100)
Lumia.toggle_power()
Lumia.use_phone(7)
Lumia.charge(70)
print(Lumia.status)